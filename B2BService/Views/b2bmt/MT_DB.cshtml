@model IEnumerable<B2BService.Models.VMTDB>
@using B2BService.Models
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string parentMessageId = string.Empty;
    string piServer = ViewBag.piServer;
    DateTime? cdtFrom = (ViewBag.cdtFrom != null) ? (DateTime)ViewBag.cdtFrom : DateTime.Now.AddMonths(-1);
    DateTime ? cdtEnd = (ViewBag.cdtEnd != null)? (DateTime?)ViewBag.cdtEnd: DateTime.Now;

    string CdtFrom = cdtFrom.Value.ToString("yyyy/MM/dd hh:mm:ss");
    string CdtEnd = cdtEnd.Value.ToString("yyyy/MM/dd hh:mm:ss");
    string SqlString = string.IsNullOrEmpty(ViewBag.SqlString) ? string.Empty : ViewBag.SqlString;

    IList<string> Partners = (IList<string>)ViewData["Partners"];
    IList<string> Divisions = (IList<string>)ViewData["Divisions"];
    IList<string> Regions = (IList<string>)ViewData["Regions"];
    IList<string> ISASenderIDs = (IList<string>)ViewData["ISASenderIds"];
    IList<string> ISAReceiverIDs = (IList<string>)ViewData["ISAReceiverIds"];
    IList<string> GSSenderIDs = (IList<string>)ViewData["GSSenderIds"];
    IList<string> EDIMsgTypes = (IList<string>)ViewData["EDIMsgTypes"];
    string website = @"/B2BService/";
    string web = website + "api/MTRef/";
}
<script type="text/javascript">
    var optionsPartner = [];
    var optionsDivision = [];
    var optionsRegion = [];
    var optionsISASenderID = [];
    var optionsISAReceiverID = [];
    var optionsGSSenderID = [];
    var optionsEDIMsgType = [];
    var optionsDirection = [];
    var irefresh = 0;
    var icounter = 0;

    function checkBoxinspect(ItemId, val, idx, $inp, options) {
        icounter = icounter + 1;

        if ((idx = options.indexOf(val)) > -1) {
            options.splice(idx, 1);
            setTimeout(function () { $inp.prop('checked', false) }, 1);
            console.log(ItemId + " false " + icounter);
        } else {
            options.push(val);
            setTimeout(function () { $inp.prop('checked', true) }, 1);

            console.log(ItemId + " true " + icounter);
        }

        ItemId.val('');
        options.forEach(function (element) {
            ItemId.val(ItemId.val() + element + '\r\n');
        });

        irefresh = irefresh + 1;
        return false;
    }

    var RrefreshBinding = function () {
        $('.dropdown-menu li a').on('click', function (event) {

            if (irefresh > 1) {
                irefresh = 0;
                //setTimeout(function () { alert("RefreshBinding" + irefresh); }, 1);
                return false;
            }
            else {
                setTimeout(function () { irefresh = irefresh + 1; return true;}, 5);
            }

            var $target = $(event.currentTarget),
                val = $target.attr('data-value'),
                $inp = $target.find('input'),
                idx,
                ItemName = $target.attr('name'),
                ItemId,
                options = [];
            ItemId = $('.button-group #ul' + ItemName);
            //alert(ItemName);
            switch (ItemName) {
                case 'PARTNER':
                    options = optionsPartner;
                    break;
                case 'DIVISION':
                    options = optionsDivision;
                    break;
                case 'REGION':
                    options = optionsRegion;
                    break;
                case 'ISASENDERID':
                    options = optionsISASenderID;
                    break;
                case 'ISARECEIVERID':
                    options = optionsISAReceiverID;
                    break;
                case 'GSSENDERID':
                    options = optionsGSSenderID;
                    break;
                case 'EDIMSGTYPE':
                    options = optionsEDIMsgType;
                    break;
                case 'DIRECTION':
                    options = optionsDirection;
                    break;
            }

            area = $('#area' + ItemName);
            area.val('');

            switch (ItemName) {
                case 'PARTNER':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsPartner = options;
                    area = optionsPartner.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    GetDIVISION('DIVISION', optionsPartner);
                    break;
                case 'DIVISION':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsDivision = options;
                    area = optionsDivision.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    GetREGION('REGION', optionsPartner, optionsDivision);
                    break;
                case 'REGION':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsRegion = options;
                    area = optionsRegion.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    GetOthersID('ISASENDERID', optionsPartner, optionsDivision, optionsRegion);
                    GetOthersID('ISASENDERID', optionsPartner, optionsDivision, optionsRegion);
                    GetOthersID('ISARECEIVERID', optionsPartner, optionsDivision, optionsRegion);
                    GetOthersID('GSSENDERID', optionsPartner, optionsDivision, optionsRegion);
                    GetOthersID('EDIMSGTYPE', optionsPartner, optionsDivision, optionsRegion);
                    
                    break;
                case 'ISASENDERID':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsISASenderID = options;
                    area = optionsISASenderID.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    
                    break;
                case 'ISARECEIVERID':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsISAReceiverID = options;
                    area = optionsISAReceiverID.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    
                    break;
                case 'GSSENDERID':
                    //alert(ItemName);
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsGSSenderID = options;
                    area = optionsGSSenderID.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    
                    break;
                case 'EDIMSGTYPE':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsEDIMsgType = options;
                    area = optionsEDIMsgType.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    break;
                case 'DIRECTION':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsDirection = options;
                    area = optionsDirection.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    break;
            }
            return false;
        });
        return false;
    }

	function GetDIVISION(itemName, itemId)
	{
		var DIVISION = "DIVISION";
		$.ajax({
			cache: false,
			type: "GET",
			url: "@web" + "Get" + itemName,
			data: { partner: itemId, optradio: "PIQServer" },
			success: function (data) {
                var ItemId2 = $('.button-group #ul' + itemName);
				ItemId2.html('');
				ItemId2.addClass('dropdown-menu');
				ItemId2.attr('name', 'ul' + itemName);
				ItemId2.attr('id', 'ul' + itemName);
				$.each(data, function (i, item) {
					var li = $('<li/>').appendTo('#ul' + itemName);
					var a = $('<a />').appendTo(li);
					a.addClass('small').attr('href', '#');
					a.attr('id', itemName);
					a.attr('name', itemName);
					a.attr('data-value', item);
					a.attr('tabIndex', -1);
					
					var input = $('<input />');
					input.attr('type', 'checkbox');
					input.appendTo(a);
					input.after('&nbsp;' + item);
					a.appendTo(li);
                });
                //alert("DIVISION before RrefreshBinding" + irefresh);
                RrefreshBinding();
                //alert("DIVISION after RrefreshBinding" + irefresh);
			},
			error: function (xhr, ajaxOptions, thrownError) {
				return false;
				alert('Failed to retrieve test item menu.');
			}
		});
		return true;
    }

    function GetREGION(itemName, partnerId, divisionId)
    {
        //alert(partnerId);
		$.ajax({
			cache: false,
			type: "GET",
			url: "@web" + "Get" + itemName,
			data: { partner: partnerId, division: divisionId, optradio: "PIQServer" },
			success: function (data) {
                var ItemId2 = $('.button-group #ul' + itemName);
				ItemId2.html('');
				ItemId2.addClass('dropdown-menu');
				ItemId2.attr('name', 'ul' + itemName);
				ItemId2.attr('id', 'ul' + itemName);
				$.each(data, function (i, item) {
					var li = $('<li/>').appendTo('#ul' + itemName);
					var a = $('<a />').appendTo(li);
					a.addClass('small').attr('href', '#');
					a.attr('id', itemName);
					a.attr('name', itemName);
					a.attr('data-value', item);
					a.attr('tabIndex', -1);
					
					var input = $('<input />');
					input.attr('type', 'checkbox');
					input.appendTo(a);
					input.after('&nbsp;' + item);
					a.appendTo(li);
				});
                RrefreshBinding();
			},
			error: function (xhr, ajaxOptions, thrownError) {
				return false;
				alert('Failed to retrieve test item menu.');
			}
		});
		return true;
    }

    function GetOthersID(itemName, partnerId, divisionId, regionId)
    {
        //alert(partnerId);
		$.ajax({
			cache: false,
			type: "GET",
			url: "@web" + "Get" + itemName,
			data: { partner: partnerId, division: divisionId, region:regionId, optradio: "PIQServer" },
			success: function (data) {
                var ItemId2 = $('.button-group #ul' + itemName);
				ItemId2.html('');
				ItemId2.addClass('dropdown-menu');
				ItemId2.attr('name', 'ul' + itemName);
				ItemId2.attr('id', 'ul' + itemName);
				$.each(data, function (i, item) {
					var li = $('<li/>').appendTo('#ul' + itemName);
					var a = $('<a />').appendTo(li);
					a.addClass('small').attr('href', '#');
					a.attr('id', itemName);
					a.attr('name', itemName);
					a.attr('data-value', item);
					a.attr('tabIndex', -1);
					
					var input = $('<input />');
					input.attr('type', 'checkbox');
					input.appendTo(a);
					input.after('&nbsp;' + item);
					a.appendTo(li);
				});
                RrefreshBinding();
			},
			error: function (xhr, ajaxOptions, thrownError) {
				return false;
				alert('Failed to retrieve test item menu.');
			}
		});
		return true;
	}

    $(function () {
        $('#datetimepicker6').datetimepicker({
            format: 'YYYY/MM/DD HH:mm:ss'
        });
        $('#datetimepicker7').datetimepicker({
            useCurrent: false, //Important! See issue #1075
            format: 'YYYY/MM/DD HH:mm:ss'
        });
        $("#datetimepicker6").on("dp.change", function (e) {
            $('#datetimepicker7').data("DateTimePicker").minDate(e.date);
        });
        $("#datetimepicker7").on("dp.change", function (e) {
            $('#datetimepicker6').data("DateTimePicker").maxDate(e.date);
        });

        $('.dropdown-menu li a').on('click', function (event) {

            var $target = $(event.currentTarget),
                val = $target.attr('data-value'),
                $inp = $target.find('input'),
                idx,
                ItemName = $target.attr('name'),
                ItemId,
                options = [];

            alert(".dropdown-menu li a " + ItemName + " on click");

            ItemId = $(".button-group #ul" + ItemName);
            switch (ItemName) {
                case 'PARTNER':
                    options = optionsPartner;
                    break;
                case 'DIVISION':
                    options = optionsDivision;
                    break;
                case 'REGION':
                    options = optionsRegion;
                    break;
                case 'ISASENDERID':
                    options = optionsISASenderID;
                    break;
                case 'ISARECEIVERID':
                    options = optionsISAReceiverID;
                    break;
                case 'GSSENDERID':
                    options = optionsGSSenderID;
                    break;
                case 'EDIMSGTYPE':
                    options = optionsEDIMsgType;
                    break;
                case 'DIRECTION':
                    options = optionsDirection;
                    break;
            }
            area = $('#area' + ItemName);
            area.val('');

            switch (ItemName) {
                case 'PARTNER':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsPartner = options;
                    area = optionsPartner.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    GetDIVISION('DIVISION', optionsPartner);
                    break;
                case 'DIVISION':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsDivision = options;
                    area = optionsDivision.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    GetREGION('REGION', optionsPartner, optionsDivision);
                    break;
                case 'REGION':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsRegion = options;
                    area = optionsRegion.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    break;
                case 'ISASENDERID':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsISASenderID = options;
                    area = optionsISASenderID.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    break;
                case 'ISARECEIVERID':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsISAReceiverID = options;
                    area = optionsISAReceiverID.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    break;
                case 'GSSENDERID':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsGSSenderID = options;
                    area = optionsGSSenderID.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    break;
                case 'EDIMSGTYPE':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsEDIMsgType = options;
                    area = optionsEDIMsgType.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    break;
                case 'DIRECTION':
                    checkBoxinspect(ItemId, val, idx, $inp, options);
                    optionsDirection = options;
                    area = optionsDirection.forEach(function (ele) { area.val(area.val() + ele + '\r\n') });
                    break;
            }
            $(event.target).blur();
            console.log(options);
            irefresh = irefresh + 1;
            //alert("first: " + irefresh);
            return false;
        });
    });

    $(document).on("click", ".open-AddBookDialog", function () {
        var ItemId = $(this).data('id');
        $(".modal-title #ItemId").val(ItemId);
        ItemId = $(".modal-title #ItemId");
        $(".modal-body #ItemContent").val($("#area" + ItemId.val()).val());
        // As pointed out in comments,
        // it is superfluous to have to manually call the modal.
        // $('#addBookDialog').modal('show');
    });

    $('#myModal').on('hidden.bs.modal', function () {
        alert('Close event!');
        var ItemId = $(".modal-title #ItemId");
        $("#" + ItemId.val()).val($(".modal-body #ItemContent").val());
        //var ItemId = $(".modal-title #ItemId");
        //$("#" + ItemId.val()).val($(".modal-body #ItemContent").val());
        //ItemId.val($(".modal-body #ItemContent").val());
        //console.log('ItemId : ' + $(".modal-body #ItemContent").val());
    });

    function setTextValue() {
        var ItemId = $(".modal-title #ItemId");
        $("#" + ItemId.val()).val($(".modal-body #ItemContent").val());
    }
</script>
<table class="table table-condensed" style="width:100%">
    <tr>
        <td>
            @using (Html.BeginForm("MT_DB", "b2bmt", FormMethod.Get))
            {
                <label class="radio-inline">
                    <input id="piServer" type="radio" name="piServer" value="PIDServer" @((piServer == "PIDServer") ? "checked" : string.Empty)>PID
                </label>
                <label class="radio-inline">
                    <input id="piServer" type="radio" name="piServer" value="PIQServer" @((piServer == "PIQServer") ? "checked" : string.Empty)>PIQ
                </label>
                <label class="radio-inline">
                    <input id="piServer" type="radio" name="piServer" value="PIPServer" @((piServer == "PIPServer") ? "checked" : string.Empty)>PIP
                </label>
                <table class="table table-bordered table-striped table-condensed">
                    <tr>
                        <td>
                            <table class="table table-bordered table-striped table-condensed">
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.MSGID)</th>
                                    <th>@Html.DisplayNameFor(model => model.PARENT)</th>
                                    <th>@Html.DisplayNameFor(model => model.DOCNUM)</th>
                                    <th>@Html.DisplayNameFor(model => model.CONTROLNUM)</th>
                                    <th>@Html.DisplayNameFor(model => model.IDOC)</th>
                                    <th>Create</th>
                                </tr>
                                <tr>
                                    <td>
                                        @Html.TextArea("MSGID", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                        <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnMSGID" data-id="MSGID" data-toggle="modal" data-target="#myModal">Edit</button>
                                    </td>
                                    <td>
                                        @Html.TextArea("PARENT", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                        <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnPARENT" data-id="PARENT" data-toggle="modal" data-target="#myModal">Edit</button>
                                    </td>
                                    <td>
                                        @Html.TextArea("Docnum", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                        <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnDOCNUM" data-id="Docnum" data-toggle="modal" data-target="#myModal">Edit</button>
                                    </td>
                                    <td>
                                        @Html.TextArea("CONTROLNUM", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                        <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnCONTROLNUM" data-id="CONTROLNUM" data-toggle="modal" data-target="#myModal">Edit</button>
                                    </td>
                                    <td>
                                        @Html.TextArea("IDOC", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                        <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnIDOC" data-id="IDOC" data-toggle="modal" data-target="#myModal">Edit</button>
                                    </td>
                                    <td style="width:20%" rowspan="4">
                                        <table class="table table-condensed" style="width:220px">
                                            <tr>
                                                <td>
                                                    <div class='input-group date' id='datetimepicker6'>
                                                        @Html.TextBox("CdtFrom", CdtFrom, new { @class = "form-control" })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    <div class='input-group date' id='datetimepicker7'>
                                                        @Html.TextBox("CdtEnd", CdtEnd, new { @class = "form-control" })
                                                        <span class="input-group-addon">
                                                            <span class="glyphicon glyphicon-calendar"></span>
                                                        </span>
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>

                            </table>
                        </td>
                        <th rowspan="3">
                            <input class="btn btn-primary btn-lg" type="submit" value="搜尋" />
                        </th>
                    </tr>
                    <tr>
                        <td>
                            <table class="table table-bordered table-striped table-condensed" id="tblMT">
                                <tr>
                                    <th>PARTNER</th>
                                    <th>DIVISION</th>
                                    <th>REGION</th>
                                    <th>ISASENDERID</th>
                                    <th>ISARECEIVERID</th>
                                    <th>GSSENDERID</th>
                                </tr>
                                <tr id="secondrow">
                                    <td>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="button-group">
                                                    @Html.TextArea("areaPARTNER", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                                    <div class="button-group">
                                                        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>

                                                        <ul class="dropdown-menu" id="ulPARTNER" name="ulPARTNER">
                                                            @foreach (var item in Partners)
                                                            {
                                                                <li>
                                                                    <a href="#" name="PARTNER" class="small" data-value="@item" tabIndex="-1"><input type="checkbox" />&nbsp;@item</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                    <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnPARTNER" data-id="PARTNER" data-toggle="modal" data-target="#myModal">Edit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="button-group">
                                                    @Html.TextArea("areaDIVISION", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                                    <div class="button-group">
                                                        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>

                                                        <ul class="dropdown-menu" id="ulDIVISION" name="ulDIVISION">
                                                            @foreach (var item in Divisions)
                                                            {
                                                                <li>
                                                                    <a href="#" name="DIVISION" class="small" data-value="@item" tabIndex="-1"><input type="checkbox" />&nbsp;@item</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                    <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnDIVISION" data-id="DIVISION" data-toggle="modal" data-target="#myModal">Edit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="button-group">
                                                    @Html.TextArea("areaREGION", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                                    <div class="button-group">
                                                        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>

                                                        <ul class="dropdown-menu" id="ulREGION" name="ulREGION">
                                                            @foreach (var item in Regions)
                                                            {
                                                                <li>
                                                                    <a href="#" name="REGION" class="small" data-value="@item" tabIndex="-1"><input type="checkbox" />&nbsp;@item</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                    <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnREGION" data-id="REGION" data-toggle="modal" data-target="#myModal">Edit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="button-group">
                                                    @Html.TextArea("areaISASENDERID", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                                    <div class="button-group">
                                                        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>

                                                        <ul class="dropdown-menu" id="ulISASENDERID" name="ulISASENDERID">
                                                            @foreach (var item in ISASenderIDs)
                                                            {
                                                                <li>
                                                                    <a href="#" name="ISASENDERID" class="small" data-value="@item" tabIndex="-1"><input type="checkbox" />&nbsp;@item</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                    <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnISASENDERID" data-id="ISASENDERID" data-toggle="modal" data-target="#myModal">Edit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="button-group">
                                                    @Html.TextArea("areaISARECEIVERID", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                                    <div class="button-group">
                                                        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>

                                                        <ul class="dropdown-menu" id="ulISARECEIVERID" name="ulISARECEIVERID" >
                                                            @foreach (var item in ISAReceiverIDs)
                                                            {
                                                                <li>
                                                                    <a href="#" name="ISARECEIVERID" class="small" data-value="@item" tabIndex="-1"><input type="checkbox" />&nbsp;@item</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                    <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnISARECEIVERID" data-id="ISARECEIVERID" data-toggle="modal" data-target="#myModal">Edit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="button-group">
                                                    @Html.TextArea("areaGSSENDERID", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                                    <div class="button-group">
                                                        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>

                                                        <ul class="dropdown-menu" id="ulGSSENDERID", name="ulGSSENDERID">
                                                            @foreach (var item in GSSenderIDs)
                                                            {
                                                                <li>
                                                                    <a href="#" name="GSSENDERID" class="small" data-value="@item" tabIndex="-1"><input type="checkbox" />&nbsp;@item</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                    <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnGSSENDERID" data-id="GSSENDERID" data-toggle="modal" data-target="#myModal">Edit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            </table>
                        </td>

                    </tr>

                    <tr>
                        <td>
                            <table class="table table-bordered table-striped table-condensed">
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.EDIMSGTYPE)</th>
                                    <th>@Html.DisplayNameFor(model => model.DIRECTION)</th>

                                    <th>@Html.DisplayNameFor(model => model.GSRECEIVERID)</th>
                                    <th>
                                        <abbr title="Find REF value, each phase seperated with space.">KEYWORD</abbr>
                                    </th>
                                    <th>
                                        <abbr title="Find Customer's message id">@Html.DisplayNameFor(model => model.CHLMSGID)</abbr>
                                    </th>
                                    <th>Status</th>
                                </tr>
                                <tr>
                                    <td>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="button-group">
                                                    @Html.TextArea("areaEDIMSGTYPE", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                                    <div class="button-group">
                                                        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>

                                                        <ul class="dropdown-menu" id="ulEDIMSGTYPE">
                                                            @foreach (var item in EDIMsgTypes)
                                                            {
                                                                <li>
                                                                    <a href="#" name="EDIMSGTYPE" class="small" data-value="@item" tabIndex="-1"><input type="checkbox" />&nbsp;@item</a>
                                                                </li>
                                                            }
                                                        </ul>
                                                    </div>
                                                    <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnEDIMSGTYPE" data-id="EDIMSGTYPE" data-toggle="modal" data-target="#myModal">Edit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="button-group">
                                                    @Html.TextArea("areaDIRECTION", "", new { @class = "form-control", @rows = 1, style = "resize: none;" })
                                                    <div class="button-group">
                                                        <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <span class="caret"></span></button>

                                                        <ul class="dropdown-menu" id="ulDIRECTION">
                                                            <li>
                                                                <a href="#" name="DIRECTION" class="small" data-value="1" tabIndex="-1"><input type="checkbox" />&nbsp;1</a>
                                                            </li>
                                                            <li>
                                                                <a href="#" name="DIRECTION" class="small" data-value="2" tabIndex="-1"><input type="checkbox" />&nbsp;2</a>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                    <button type="button" class="open-AddBookDialog btn btn-info btn-xs" id="btnDIRECTION" data-id="DIRECTION" data-toggle="modal" data-target="#myModal">Edit</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>

                                    <td>@Html.TextBox("GSRECEIVERID", "", new { @class = "form-control" }) </td>
                                    <td>@Html.TextBox("keyWordSearch", "", new { @class = "form-control" })</td>
                                    <td>@Html.TextBox("chlMsgId", "", new { @class = "form-control" })</td>
                                    <td>@Html.DropDownList("ddlSTATUS")</td>
                                </tr>
                            </table>
                        </td>
                    </tr>

                </table>
            }

            <table class="table table-bordered table-striped table-condensed">
                <tr>
                    <th style="width:10%;font-size:0.7em; word-wrap: break-word;">
                        @Html.DisplayNameFor(model => model.MSGID)
                    </th>
                    <th style="width:10%;font-size:0.7em; word-wrap: break-word;">
                        @Html.DisplayNameFor(model => model.DIRECTION)
                    </th>
                    <th style="width:5%;font-size:0.7em; word-wrap: break-word;">
                        @Html.DisplayNameFor(model => model.EDIMSGTYPE)
                    </th>
                    <th style="width:10%;font-size:0.7em; word-wrap: break-word;">
                        @Html.DisplayNameFor(model => model.GSSENDERID)
                    </th>
                    <th style="width:10%;font-size:0.7em; word-wrap: break-word;">
                        @Html.DisplayNameFor(model => model.EDIDATE)
                    </th>
                    <th style="width:10%;font-size:0.7em; word-wrap: break-word;">
                        @Html.DisplayNameFor(model => model.PI_STATUS)
                    </th>
                    <th style="width:8%"></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td style="font-size:0.7em; word-wrap: break-word;">
                            <ul class="list-group">
                                <li class="list-group-item active">
                                    <abbr title="Message Id">M:</abbr>
                                    @Html.DisplayFor(modelItem => item.MSGID)
                                </li>
                                <li class="list-group-item">
                                    <abbr title="Parent Id">P:</abbr>
                                    @Html.DisplayFor(modelItem => item.PARENT)
                                </li>
                            </ul>
                        </td>
                        <td style="font-size:0.6em; word-wrap: break-word;">
                            <table class="table table-bordered table-striped table-condensed">
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.AS2PARTNER)</th>
                                    <td>@Html.DisplayFor(modelItem => item.AS2PARTNER)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.DIRECTION) &nbsp; @Html.DisplayFor(modelItem => item.DIRECTION)</th>
                                    <td> @Html.DisplayFor(modelItem => item.MTDirectionRemark)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.STATUS) &nbsp;@Html.DisplayFor(modelItem => item.STATUS) </th>
                                    <td>@Html.DisplayFor(modelItem => item.MTStatusRemark)</td>
                                </tr>
                            </table>
                        </td>
                        <td style="font-size:0.6em; word-wrap: break-word;">
                            <table class="table table-bordered table-striped table-condensed">
                                <tr>
                                    <th style="width:30%">@Html.DisplayNameFor(model => model.EDIMSGTYPE)</th>
                                    <td>@Html.DisplayFor(modelItem => item.EDIMSGTYPE)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.DOCNUM)</th>
                                    <td>@Html.DisplayFor(modelItem => item.DOCNUM)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.CONTROLNUM)</th>
                                    <td>@Html.DisplayFor(modelItem => item.CONTROLNUM)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.IDOC)</th>
                                    <td style="font-size:0.6em; word-wrap: break-word;">@Html.DisplayFor(modelItem => item.IDOC)</td>
                                </tr>
                            </table>
                        </td>
                        <td style="font-size:0.6em; word-wrap: break-word;">
                            <table class="table table-bordered table-striped table-condensed">
                                <tr>
                                    <th style="width:30%">@Html.DisplayNameFor(model => model.GSSENDERID)</th>
                                    <td>@Html.DisplayFor(modelItem => item.GSSENDERID)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.GSRECEIVERID)</th>
                                    <td>@Html.DisplayFor(modelItem => item.GSRECEIVERID)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.ISASENDERID)</th>
                                    <td>@Html.DisplayFor(modelItem => item.ISASENDERID)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.ISARECEIVERID)</th>
                                    <td>@Html.DisplayFor(modelItem => item.ISARECEIVERID)</td>
                                </tr>
                            </table>
                        </td>
                        <td style="font-size:0.6em; word-wrap: break-word;">
                            <table class="table table-bordered table-striped table-condensed">
                                <tr>
                                    <td>
                                        <abbr title="EDIDATE">E:</abbr>&nbsp;@Html.DisplayFor(modelItem => item.EDIDATE)
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        <abbr title="CREATEDATE">C:</abbr>&nbsp;@Html.DisplayFor(modelItem => item.CREATEDATE)
                                    </td>
                                </tr>
                            </table>
                        </td>
                        <td style="font-size:0.5em; word-wrap: break-word;">
                            <table class="table table-bordered table-striped table-condensed">
                                <tr>
                                    <th style="width:30%">@Html.DisplayNameFor(model => model.FILEURI)</th>
                                    <td style="font-size: 0.5em; word-wrap: break-word;">@Html.DisplayFor(modelItem => item.FILEURI)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.PI_STATUS)</th>
                                    <td>@Html.DisplayFor(modelItem => item.PI_STATUS)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.PI_ERROR_CODE)</th>
                                    <td>@Html.DisplayFor(modelItem => item.PI_ERROR_CODE)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.PI_ERROR_CATEGORY)</th>
                                    <td>@Html.DisplayFor(modelItem => item.PI_ERROR_CATEGORY)</td>
                                </tr>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.IDOC_CALLBACK_MSG)</th>
                                    <td>@Html.DisplayFor(modelItem => item.IDOC_CALLBACK_MSG)</td>
                                </tr>
                            </table>
                        </td>
                        <td style="font-size:0.6em; word-wrap: break-word;">
                            @if (string.IsNullOrEmpty(item.PARENT))
                            {
                                parentMessageId = item.MSGID;
                            }
                            else
                            {
                                parentMessageId = item.PARENT;
                            }

                            @if (!string.IsNullOrEmpty(item.EDIMSGTYPE))
                            {
                                if (item.EDIMSGTYPE == "997")
                                {
                                    @Html.ActionLink("997RawData", "RawData", new { id = item.MSGID, piServer = piServer }, new { target = "_blank" })
                                    <br />
                                }
                            }

                            @Html.ActionLink("RawData", "RawData", new { id = parentMessageId, piServer = piServer }, new { target = "_blank" })
                            <br />
                            @Html.ActionLink("MDN", "MDN", new { id = parentMessageId, piServer = piServer }, new { target = "_blank" })
                            <br />
                            @Html.ActionLink("AuditLog", "AuditLog", new { id = item.MSGID, piServer = piServer }, new { target = "_blank" })
                            <br />
                            @Html.ActionLink("Process Step", "ProcessDB", new { id = item.MSGID, piServer = piServer }, new { target = "_blank" })
                        </td>
                    </tr>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.KEYWORD_SEARCH)</th>
                        <td colspan="6">@Html.DisplayFor(modelItem => item.KEYWORD_SEARCH)</td>
                    </tr>
                }
            </table>
        </td>
    </tr>
</table>
<div class="col-xs-12 col-md-12 col-lg-12">
    <pre>@SqlString</pre>
</div>

<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">
                    <input type="text" name="ItemId" id="ItemId" style="border:0; padding:0;" value="" readonly />
                </h4>
            </div>
            <div class="modal-body">
                @Html.TextArea("ItemContent", "", new { @class = "form-control", @placeholder = "Paste Number Here...", @cols = 15, @rows = 10, style = "width: 100%" })
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal" aria-hidden="true" onclick="javascript: setTextValue();">Close</button>
            </div>
        </div>
    </div>
</div>